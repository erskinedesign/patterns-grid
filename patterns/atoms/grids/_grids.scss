/* ==========================================================================
   $GRIDS
   ========================================================================== */
/**
 * A customisable, fully responsive grid system with multiple breakpoints.
 */


/* 
   $CONTENTS
   ========================================================================== */
/**
* 1. Markup
* 2. Dependencies
* 3. Default grid styles
*/




/* 
   1.MARKUP
   ========================================================================== 
 *
 * <div class="grid">
 *     <div class="grid__container">
 *         <div class="grid__column">
 *             @content
 *         </div>
 *     </div>
 * </div>
 */



/* 
   2.DEPENDENCIES
   ========================================================================== 
 * 1. Adds configurable settings such as gutters.
 * 2. Functions and mixins necessary to build the grid.
 */

@import "atoms/grids/config/grids__settings"; /* [1] */
@import "atoms/grids/config/grids__build"; /* [2] */





/*
 * GRID
 *
 * 1. Clears the .grid__column floats within.
 * 2. Sets a default max-width for grid units.
 * 3. Default widths and margins.
 */

.grid {
    @include pie-clearfix(); /* [1] */
    display: block;
    @include rems(max-width, 850); /* [2] */
    width: 95%; /* [3] */
    margin: 0 auto; /* [3] */

    /**
     * Breakpoint specific styles go here.
     */
    @include respond-to("medium and above"){
        @include rems(max-width, 600);
    }

    @include respond-to("largest only"){
        @include rems(max-width, 1000);
    }
}

    
    /**
     * GRID CONTAINER
     * 
     * 1. Adds negative horizontal margins for columns to fill up.
     * 2. Clears floats if we need columns that might crash otherwise.
     * 3. At large sizes increase the gutter size.
     */
    .grid__container {
        @include rems(margin-right, -$gutter); /* [1] */
        clear: both; /* [2] */

        @include respond-to("large and above"){
            @include rems(margin-right, -$gutter--large); /* [3] */
        }
    }

    /**
     * GRID COLUMNS
     * 
     * 1. Box sizing
     * 2. Controls vertical positioning of units.
     * 3. Gives each columns their horizontal spacing
     * 4. At large sizes increase the gutter size.
     */
        .grid__column {
            -moz-box-sizing: border-box; /* [1] */
            -webkit-box-sizing: border-box;
            box-sizing: border-box; /* [1] */
            vertical-align: top; /* [2] */
            @include rems(padding-right, $gutter); /* [3] */
            float: left;
            @include pie-clearfix();

            @include respond-to("large and above"){
                @include rems(padding-right, $gutter--large); /* [4] */
            }
        }

        /**
         * Grid columns naturally float from the left, but sometimes 
         * weâ€™ll need classes to float to the right too. These are generated
         * by the build step.
         */

        .grid__column--right {
            float: right;
        }

        /**
         * Centering grid columns 
         *
         * 1. Aligns centered columns to the grid. 
         */
        .grid__column--center {
            // float: none;
            // margin: 0 auto;
            // @include rems(padding-left, $gutter); /* [1] */
            // padding-right: 0; /* [1] */

            // @include respond-to("large and above"){
            //     @include rems(padding-left, $gutter--large); /* [1] */
            // }
        }




/**
 * Cell unit for testing
 */
.cell {
    -moz-box-sizing: border-box; 
    box-sizing: border-box;
    background-color: rgba(0,0,0, 0.1);
    opacity: .5;
    border: 1px solid #999;
    color: black;
    line-height: 1.4;
    font-family: monaco;
    font-size: 12px;
    @include rems(margin-bottom, $gutter);
    @include rems(padding-top, $gutter);
    @include rems(padding-bottom, $gutter);
    display: block;
    clear: both;
}




/* 
   MODIFIERS
   ========================================================================== 
 * 1. Adds an additional grid overlay. 
 * 2. Displays which breakpoint is available.
 */

@import "atoms/grids/modifiers/grid--overlay"; /* [1] */
@import "atoms/grids/modifiers/grid--breakpoint"; /* [2] */


